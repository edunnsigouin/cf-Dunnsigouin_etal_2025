"""

"""

import numpy  as np
import xarray as xr
import pandas as pd
from dask.diagnostics   import ProgressBar
import os
from forsikring import config,misc,s2s

# INPUT -----------------------------------------------
variables        = ['tp','t2m']                 # tp & t2m  
forecast_years   = np.arange(2017,2023,1)
forecast_months  = np.arange(1,13,1)
lead_time_months = np.arange(1,7,1)
clim_years       = np.arange(1993,2017,1) 
comp_lev         = 5
write2file       = False
# -----------------------------------------------------

dim = s2s.get_dim('1.0x1.0','time')

for variable in variables:
        
        # define stuff
        path_in  = config.dirs['s2s_monthly'] + variable + '/'
        path_out = config.dirs['era5_seasonal_forecast_monthly_clim'] + variable + '/'
    
        # calculate climatology
        filenames = [path_in + variable + '_' + str(year) + '.nc' for year in clim_years]
        with ProgressBar(): ds_clim = xr.open_mfdataset(filenames).groupby('time.month').mean(dim='time').compute()
        ds_clim = ds_clim.rename({'month':'time'}) 
        
        for year in forecast_years:

            print('\nvariable: ' + variable + ', year: ' + str(year))
            # initialize output array per year
            forecast_format = init_forecast_format_array(dim,lead_time_months,year,forecast_months,variable)

            for m, month in enumerate(forecast_months):

                init_date                = str(year) + '-' + str(month).zfill(2)
                leadtime_dates           = pd.date_range(init_date,periods=lead_time_months.size,freq="MS").month.values
                forecast_format[:,m,:,:] = ds_clim.sel(time=leadtime_dates,method='nearest')[variable].values

            if write2file:
                print('writing to file..')
                filename_out = variable + '_' + str(year) + '.nc'
                s2s.to_netcdf_pack64bit(forecast_format,path_out + filename_out)
                print('compress file to reduce space..')
                s2s.compress_file(comp_lev,3,filename_out,path_out)
                print('')

            forecast_format.close()
        ds_clim.close()
